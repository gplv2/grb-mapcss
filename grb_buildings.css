meta   
{
    title: "Colored Building entities for URBIS/GRB/PICC migration";
    author: "gplas"; 
    version: "1.4"; 
    description: "Style to classify buildings for BE imports (English) GRB, PICC or URBIS entities.  Helps to select merging or selecting correct tags (like date, references";
    link: "https://bitless.be/osm/mapcss/grb_buildings.css";
        watch-modified: true;
}

meta[lang=nl]
{
        title: "Gekleurde URBIS/GRB/PICC gebouwen";
        description: "Stijl om URBIS, GRB en PICC gebouwen te doen opvallen tussen nieuwe en bestaande OSM data, vooral nuttig bij het mergen van tags";
        link: "https://github.com/gplv2/grb-mapcss";
}


area[source:geometry:ref=~/Urbis.*/] 
{
    text: eval(concat(tag("source:geometry:ref"), " - ", tag("source:geometry:version")));
    text-color: white; 
    font-size: 15;
    text-offset: -19;
    z-index: 1;
    color: blue; 
    fill-color: blue; 
    width: 3;
    dashes: 10,2;
}

area[source:geometry:ref=~/Urbis.*/]:new
{
    text: eval(concat(tag("source:geometry:ref"), " - ", tag("source:geometry:version")));
    text-color: yellow; 
    font-size: 15;
    text-position: center;
    text-offset: 19;
    z-index: 1;
    color: blue; 
    fill-color: yellow; 
    width: 3;
    dashes: 10,2;
}

area[source:geometry:ref=~/Gbg.*/]
{
    text: eval(concat(tag("source:geometry:ref"), " - ", tag("source:geometry:date")));
    text-color: white; 
    font-size: 15;
    text-position: center;
    text-offset: -19;
    z-index: 1;
    color: blue; 
    fill-color: blue; 
    width: 3;
    dashes: 10,2;
}

area[source:geometry:ref=~/Gbg.*/]:new
{
    text: eval(concat(tag("source:geometry:ref"), " - ", tag("source:geometry:date")));
    text-color: yellow; 
    font-size: 15;
    text-position: center;
    text-offset: 19;
    z-index: 1;
    color: blue; 
    fill-color: yellow; 
    width: 3;
    dashes: 10,2;
}

area[source:geometry:ref=~/Gba.*|Knw.*/] 
{
    text: "source:geometry:ref";
    text-color: white; 
    font-size: 15;
    text-position: center;
    text-offset: -19;
    z-index: 1;
    color: blue; 
    fill-color: blue; 
    width: 3;
    dashes: 10,2;
}

area[source:geometry:ref=~/Gba.*|Knw.*/]:new
{
    text: eval(concat(tag("source:geometry:ref"), " - ", tag("source:geometry:date")));
    text-color: yellow; 
    font-size: 15;
    text-position: center;
    z-index: 1;
    text-offset: 19;
    color: blue; 
    fill-color: yellow; 
    width: 3;
    dashes: 10,2;
}

area[source:geometry:ref=~/Picc.*/] 
{
    text: eval(concat(tag("source:geometry:ref"), " - ", tag("source:geometry:date")));
    text-color: white; 
    font-size: 15;
    text-position: center;
    text-offset: -19;
    z-index: 1;
    color: blue; 
    fill-color: blue; 
    width: 3;
    dashes: 10,2;
}

area[source:geometry:ref=~/Picc.*/]:new
{
    text: eval(concat(tag("source:geometry:ref"), " - ", tag("source:geometry:date")));
    text-color: yellow; 
    font-size: 15;
    text-position: center;
    text-offset: 19;
    z-index: 1;
    color: blue; 
    fill-color: yellow; 
    width: 3;
    dashes: 10,2;
}

node[fixme], way[fixme] {
    fill-color: #f0f;
    text: eval("fixme");
    text-halo-color: #f0f;
}

